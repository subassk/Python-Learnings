//Write code to assign to the variable map_testing all the elements in lst_check while adding the string “Fruit: ” to the beginning of each element using mapping.

lst_check = ['plums', 'watermelon', 'kiwi', 'strawberries', 'blueberries', 'peaches', 'apples', 'mangos', 'papaya']
map_testing = map(lambda item:'Fruit: '+ item,lst_check)
print(map_testing)

Output:
['Fruit: plums', 'Fruit: watermelon', 'Fruit: kiwi', 'Fruit: strawberries', 'Fruit: blueberries', 'Fruit: peaches', 'Fruit: apples', 'Fruit: mangos', 'Fruit: papaya']

Result	Actual Value	Expected Value	Notes
Pass	"['Fru...aya']"	"['Fru...aya']"	Testing that map_testing has the correct values.
Pass	'map('	'\nlst_...ting)'	Testing your code (Don't worry about actual and expected values).
Pass	'filter('	'\nlst_...ting)'	Testing your code (Don't worry about actual and expected values).
Pass	'sum('	'\nlst_...ting)'	Testing your code (Don't worry about actual and expected values).
Pass	'zip('	'\nlst_...ting)'	Testing your code (Don't worry about actual and expected values).
You passed: 100.0% of the tests



//Below, we have provided a list of strings called countries. Use filter to produce a list called b_countries that only contains the strings from countries that begin with B.
item
countries = ['Canada', 'Mexico', 'Brazil', 'Chile', 'Denmark', 'Botswana', 'Spain', 'Britain', 'Portugal', 'Russia', 'Thailand', 'Bangladesh', 'Nigeria', 'Argentina', 'Belarus', 'Laos', 'Australia', 'Panama', 'Egypt', 'Morocco', 'Switzerland', 'Belgium']

b_countries = []
b_countries = filter(lambda item:'B' in item,countries)
print(b_countries)

Output:
['Brazil', 'Botswana', 'Britain', 'Bangladesh', 'Belarus', 'Belgium']

Result	Actual Value	Expected Value	Notes
Pass	"['Bra...ium']"	"['Bra...ium']"	Testing that b_countries is correct.
Pass	'map('	'\ncoun...ries)'	Testing your code (Don't worry about actual and expected values).
Pass	'filter('	'\ncoun...ries)'	Testing your code (Don't worry about actual and expected values).
Pass	'sum('	'\ncoun...ries)'	Testing your code (Don't worry about actual and expected values).
Pass	'zip('	'\ncoun...ries)'	Testing your code (Don't worry about actual and expected values).
You passed: 100.0% of the tests





